Index: app/src/main/java/com/ledungcobra/cafo/ShopSelected.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ledungcobra.cafo;\n\nimport android.animation.AnimatorSet;\nimport android.animation.ObjectAnimator;\nimport android.animation.ValueAnimator;\nimport android.os.Bundle;\nimport android.util.DisplayMetrics;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.animation.AccelerateDecelerateInterpolator;\nimport android.widget.GridView;\nimport android.widget.LinearLayout;\nimport android.widget.LinearLayout.LayoutParams;\nimport android.widget.SearchView;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.appcompat.widget.Toolbar;\nimport androidx.recyclerview.widget.GridLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.google.android.material.appbar.AppBarLayout;\n\n\npublic class ShopSelected extends AppCompatActivity {\n    GridView gridView;\n    RecyclerView recyclerView;\n    RecyclerView.LayoutManager layoutManager;\n    ShopAdapterRecycleView shopAdapterRecycleView;\n    private Toolbar toolbar;\n    SearchView searchView;\n    AppBarLayout appBarLayout;\n    private float  appBarHeight;\n\n    private int  searchBarWidth;\n\n    private boolean appBarExpanded = true;\n\n    String[] items = {\"Item1\",\"Item2\",\"Item3\",\"Item4\",\"Item5\",\"Item6\",\"Item7\",\"Item8\",\"Item7\",\"Item8\"};\n    String[] address = {\"ADDRItem1\",\"ADDRItem2\",\"ADDRItem3\",\"ADDRItem4\",\"ADDRItem5\",\"ADDRItem6\",\"ADDRItem7\",\"ADDRItem8\",\"ADDRItem7\",\"ADDRItem8\"};\n    Integer[] thumbnails = {R.drawable.ic_launcher_background,R.drawable.ic_launcher_background,R.drawable.ic_launcher_background,R.drawable.ic_launcher_background\n    ,R.drawable.ic_launcher_background,R.drawable.ic_launcher_background,R.drawable.ic_launcher_background,\n            R.drawable.ic_launcher_background,R.drawable.ic_launcher_background, R.drawable.ic_launcher_background};\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_shop_selected);\n        //RecycleView\n        recyclerView = findViewById(R.id.recycleView);\n        layoutManager = new GridLayoutManager(this, 2);\n        recyclerView.setLayoutManager(layoutManager);\n        shopAdapterRecycleView = new ShopAdapterRecycleView(this, thumbnails, items, address);\n\n        recyclerView.setAdapter(shopAdapterRecycleView);\n\n        //Toolbar action button\n        toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n        toolbar.setTitle(\"CaFo\");\n        toolbar.collapseActionView();\n\n        //Title\n        searchView = findViewById(R.id.searchView);\n        appBarLayout = findViewById(R.id.appbar);\n\n        appBarHeight =  200;\n\n//        searchBarWidth =\n        DisplayMetrics displayMetrics = new DisplayMetrics();\n        getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);\n        int height = displayMetrics.heightPixels;\n         searchBarWidth = displayMetrics.widthPixels;;\n         final LinearLayout container = findViewById(R.id.container);\n\n\n        recyclerView.setOnScrollListener(new RecyclerView.OnScrollListener() {\n            private int backupMargin;\n            @Override\n            public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newState) {\n                super.onScrollStateChanged(recyclerView, newState);\n            }\n\n            @Override\n            public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {\n                super.onScrolled(recyclerView, dx, dy);\n                if (dy > 0) {\n\n                   removeViewsParent();\n\n                    ViewGroup.LayoutParams layoutParamsSearch = searchView.getLayoutParams();\n                    backupMargin  = ((ViewGroup.MarginLayoutParams)layoutParamsSearch).topMargin;\n                    layoutParamsSearch.width = 0;\n                    layoutParamsSearch.height = LinearLayout.LayoutParams.WRAP_CONTENT;\n\n                    searchView.setLayoutParams(new LinearLayout.LayoutParams(0, LinearLayout.LayoutParams.WRAP_CONTENT,3));\n                    toolbar.setLayoutParams(new LinearLayout.LayoutParams(0, LinearLayout.LayoutParams.WRAP_CONTENT,1));\n                    container.addView(searchView);\n                    container.addView(toolbar);\n\n\n                    //animateAppBar();\n                } else if (dy < 0) {\n                    //reverseAnimationAppBar();\n                    removeViewsParent();\n                    container.removeAllViews();\n                    searchView.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT\n                            , LinearLayout.LayoutParams.WRAP_CONTENT));\n\n                   toolbar.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT\n                            , LinearLayout.LayoutParams.WRAP_CONTENT));\n\n                   appBarLayout.addView(searchView);\n                   appBarLayout.addView(toolbar);\n                }\n            }\n        });\n\n        //SearchView\n        searchView.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                searchView.setIconified(false);\n            }\n        });\n\n\n    }\n\n    public void removeViewsParent(){\n\n        if(searchView.getParent()!=null){\n            ((ViewGroup)searchView.getParent()).removeView(searchView);\n        }\n        if(toolbar.getParent()!=null){\n            ((ViewGroup)toolbar.getParent()).removeView(toolbar);\n        }\n\n    }\n    public void animateAppBar(){\n\n        ObjectAnimator toolBar = ObjectAnimator.ofFloat(toolbar, \"translationY\", -0.35f*appBarHeight);\n        toolBar.setDuration(450);\n\n        ObjectAnimator searchBar = ObjectAnimator.ofFloat(searchView, \"translationY\", 0.5f*appBarHeight);\n        searchBar.setDuration(400);\n        searchBar.start();\n\n        float val =0.7f*searchBarWidth;\n        slideView(searchView,searchBarWidth,val );\n\n        searchBar.setDuration(400);\n        ObjectAnimator appBar = ObjectAnimator.ofFloat(appBarLayout, \"translationY\", -0.95f*appBarHeight);\n        appBar.start();\n\n        toolBar.start();\n    }\n\n    public static void slideView(final View view,\n                                 float currentWidth,\n                                 float newWidth\n    ) {\n\n        ValueAnimator slideAnimator = ValueAnimator\n                .ofFloat(currentWidth, newWidth)\n                .setDuration(500);\n\n        /* We use an update listener which listens to each tick\n         * and manually updates the height of the view  */\n\n        slideAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n            @Override\n            public void onAnimationUpdate(ValueAnimator animation) {\n               Float value = (Float) animation.getAnimatedValue();\n\n                view.getLayoutParams().width = (int) value.floatValue();\n                view.requestLayout();\n            }\n        });\n\n        /*  We use an animationSet to play the animation  */\n\n        AnimatorSet animationSet = new AnimatorSet();\n        animationSet.setInterpolator(new AccelerateDecelerateInterpolator());\n        animationSet.play(slideAnimator);\n        animationSet.start();\n    }\n    public void reverseAnimationAppBar(){\n\n        ObjectAnimator toolBar = ObjectAnimator.ofFloat(toolbar, \"translationY\", 0);\n        toolBar.setDuration(450);\n\n        ObjectAnimator searchBar = ObjectAnimator.ofFloat(searchView, \"translationY\", 0);\n        searchBar.setDuration(400);\n\n       slideView(searchView, 0.75f*searchBarWidth,0.9f*searchBarWidth);\n\n        searchBar.setDuration(400);\n        ObjectAnimator appBar = ObjectAnimator.ofFloat(appBarLayout, \"translationY\", 0);\n\n        appBar.start();\n        searchBar.start();\n        toolBar.start();\n\n    }\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.shop_selected_menu, menu);\n        return true;\n\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\n        int id = item.getItemId();\n\n        if (id==R.id.action_info){\n            Toast.makeText(ShopSelected.this, \"Action clicked\", Toast.LENGTH_LONG).show();\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/ledungcobra/cafo/ShopSelected.java	(revision 3c3e9c830927451a1ec8bf102ad1cc99d191c190)
+++ app/src/main/java/com/ledungcobra/cafo/ShopSelected.java	(date 1605587673000)
@@ -90,32 +90,32 @@
                 super.onScrolled(recyclerView, dx, dy);
                 if (dy > 0) {
 
-                   removeViewsParent();
-
-                    ViewGroup.LayoutParams layoutParamsSearch = searchView.getLayoutParams();
-                    backupMargin  = ((ViewGroup.MarginLayoutParams)layoutParamsSearch).topMargin;
-                    layoutParamsSearch.width = 0;
-                    layoutParamsSearch.height = LinearLayout.LayoutParams.WRAP_CONTENT;
+//                   removeViewsParent();
+//
+//                    ViewGroup.LayoutParams layoutParamsSearch = searchView.getLayoutParams();
+//                    backupMargin  = ((ViewGroup.MarginLayoutParams)layoutParamsSearch).topMargin;
+//                    layoutParamsSearch.width = 0;
+//                    layoutParamsSearch.height = LinearLayout.LayoutParams.WRAP_CONTENT;
+//
+//                    searchView.setLayoutParams(new LinearLayout.LayoutParams(0, LinearLayout.LayoutParams.WRAP_CONTENT,3));
+//                    toolbar.setLayoutParams(new LinearLayout.LayoutParams(0, LinearLayout.LayoutParams.WRAP_CONTENT,1));
+//                    container.addView(searchView);
+//                    container.addView(toolbar);
 
-                    searchView.setLayoutParams(new LinearLayout.LayoutParams(0, LinearLayout.LayoutParams.WRAP_CONTENT,3));
-                    toolbar.setLayoutParams(new LinearLayout.LayoutParams(0, LinearLayout.LayoutParams.WRAP_CONTENT,1));
-                    container.addView(searchView);
-                    container.addView(toolbar);
 
-
-                    //animateAppBar();
+                    animateAppBar();
                 } else if (dy < 0) {
-                    //reverseAnimationAppBar();
-                    removeViewsParent();
-                    container.removeAllViews();
-                    searchView.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT
-                            , LinearLayout.LayoutParams.WRAP_CONTENT));
-
-                   toolbar.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT
-                            , LinearLayout.LayoutParams.WRAP_CONTENT));
-
-                   appBarLayout.addView(searchView);
-                   appBarLayout.addView(toolbar);
+                    reverseAnimationAppBar();
+//                    removeViewsParent();
+//                    container.removeAllViews();
+//                    searchView.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT
+//                            , LinearLayout.LayoutParams.WRAP_CONTENT));
+//
+//                   toolbar.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT
+//                            , LinearLayout.LayoutParams.WRAP_CONTENT));
+//
+//                   appBarLayout.addView(searchView);
+//                   appBarLayout.addView(toolbar);
                 }
             }
         });
